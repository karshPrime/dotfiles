# .zshrc

# --------------------------------------------------------------------------------------
# --# INIT CONFIG #---------------------------------------------------------------------

# run fetch script only when not in tmux session
if [[ -z "$TMUX" ]]; then
    sh ~/.config/fetch.sh
fi

# zsh history
HISTFILE=~/.config/zsh/histfile 
HISTSIZE=1000 
SAVEHIST=1000
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS

# cd into directories without cd
setopt autocd extendedglob

# explicit declaration
export EDITOR=nvim

# better auto-complete
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

if [[ -f "$XDG_CACHE_HOME/zsh/zcompdump-$ZSH_VERSION" ]]; then
    autoload -Uz compinit
    compinit -C "$XDG_CACHE_HOME/zsh/zcompdump-$ZSH_VERSION"
else
    autoload -Uz compinit && compinit
fi


# fzf shell integration
eval "$(fzf --zsh)"
alias fzf='fzf --ansi --layout=reverse --cycle -i'

# Plugins
source ~/.config/zsh/zsh-autosuggestions/zsh-autosuggestions.zsh 
source ~/.config/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh 
source ~/.config/zsh/zsh-history/zsh-history.zsh 

fpath=(~/.config/zsh/zsh-completions/src $fpath) 


# --------------------------------------------------------------------------------------
# --# EASE OF LIFE #--------------------------------------------------------------------

# --# dotfiles #------------------------------------------------------------------------

DOTFILES_CONFIG="$HOME/.config/dotfiles/config"

# nvim
nedit() { pushd ~/.config/nvim/lua/; nvim $(fzf); popd }

# tmux
alias tedit="$EDITOR ~/.config/tmux/tmux.conf"
alias tupdate="tmux source-file ~/.config/tmux/tmux.conf"

# zsh
alias zedit="$EDITOR $DOTFILES_CONFIG/zsh/zshrc"
alias zupdate="source $DOTFILES_CONFIG/zsh/zshrc"

# nixos
alias xedit="sudo $EDITOR /etc/nixos/configuration.nix"
alias xhedit="sudo $EDITOR /etc/nixos/hardware-configuration.nix"
alias xlist="sudo nix-env --list-generations --profile /nix/var/nix/profiles/system"
alias xrm="sudo nix-env --profile /nix/var/nix/profiles/system --delete-generations"
alias xrmall="sudo nix-collect-garbage --delete-old"
alias xupdate="sudo nixos-rebuild switch" # --upgrade to upgrade all packages


# --# package management #--------------------------------------------------------------

# nix packages
alias xpkgs="nix-store -q --references /var/run/current-system/sw | cut -d'-' -f2- | less"
alias xfind="nix-store -q --references /var/run/current-system/sw | cut -d'-' -f2- | grep -i"


# --# file navigation #-----------------------------------------------------------------

# common dirs 
HACK_SCRIPTS="$HOME/Projects/SysHacks"

# look around
alias l='eza -lag --color=always --group-directories-first'
alias ls='eza -g'
alias la='eza -a --color=always --group-directories-first --icons'
alias tree='eza -T --group-directories-first --icons=always'

# process files
alias c='bat -n'
alias cat='bat -pp'
alias mr='bash $HACK_SCRIPTS/trash.sh' # my rm
alias smr='sudo bash $HACK_SCRIPTS/trash.sh'

# easier navigate
nav_fzf() { cd $1/$( find $1/. -type d -maxdepth 1 | xargs basename | fzf)}

cdir() { mkdir $1 && cd $1 }
count() { ls $1 | wc -l | tr -d ' '}
alias p="nav_fzf ~/Projects"
alias conf="nav_fzf ~/.config"
alias docs="nav_fzf ~/Documents"
alias down="nav_fzf ~/Downloads"
alias tordown="cd ~/.local/share/torbrowser/tbb/x86_64/tor-browser/Browser/Downloads"


# --# notes #---------------------------------------------------------------------------

alias nl="eza ~/Documents/notes/"
alias td="$EDITOR ~/Documents/notes/todo"

nr() { bat -n ~/Documents/notes/$1 }
nw() { $EDITOR ~/Documents/notes/$1 }
nd() { rm ~/Documents/notes/$1 }


# --# development #---------------------------------------------------------------------

# shell
alias dev='nix-shell --run zsh'
alias devinit='. $HACK_SCRIPTS/project_initialise.sh'
alias tst='. $HACK_SCRIPTS/testing.sh'
alias tstrm='mr /tmp/test*'

# ssh
alias core='ssh core3b+ "sudo date -s" "\\"$(date)\\""; clear; ssh core3b+'

# navigate
alias readme="$HACK_SCRIPTS/cddev.sh readme"
alias gignore="$HACK_SCRIPTS/cddev.sh gitignore"
alias gconfig="$HACK_SCRIPTS/cddev.sh gitconfig"
alias makefile="$HACK_SCRIPTS/cddev.sh makefile"
alias main="$HACK_SCRIPTS/cddev.sh main"
alias code="$HACK_SCRIPTS/cddev.sh alltype"
alias parent=". $HACK_SCRIPTS/cddev.sh parent"
alias todo='$HACK_SCRIPTS/todo.sh'
alias cpcode='$HACK_SCRIPTS/copy_code.sh'

# assemby
alias assem="objdump -M intel -D"

# docker 
alias dcompu='sudo docker-compose up -d'
alias dcompd='sudo docker-compose down'
alias dockerd='sudo dockerd'

# git shortcuts
alias g=lazygit
alias gita='git add'
alias gitA='git add -A'
alias gitc='git commit'
alias gitC='git commit -m'
alias gitD='git diff --stat'
alias gitd='git diff'
alias gitl='git log'
alias gitg='git clone'
alias gits='git status'
alias gitS='git switch'
alias gitp='git push'
alias gitP='git pull'
alias gith='git checkout'
alias gitb='git branch -a'
alias gitu="git reset --soft 'HEAD^'"
alias gito='git remote add origin'
alias gitr="git restore"
alias giti='onefetch --no-title --no-color-palette -d churn -d head --no-art
'
gitR() { git rebase -i HEAD~$1 }
gitt() { touch $1; git add $1; git commit -m "create $1" }

# tmux launch shortcuts
TMFIER="$HOME/.config/tmux/plugins/tmuxifier/bin/tmuxifier"
TMFIER_LYT=~/.config/tmux/plugins/tmuxifier/layouts
alias tmn="$TMFIER new-session"
alias tml="tmux ls"
alias tmK="tmux kill-session"
tmk() { tmux kill-session -t $(tmux ls | fzf | awk -F':' '{ print $1 }') }
tma() { tmux attach-session -t $(tmux ls | fzf | awk -F':' '{ print $1 }') }
tmd() { rm $TMFIER_LYT/$(ls $TMFIER_LYT | fzf | awk -F' ' '{print $1}') }
tme() { $TMFIER edit-session $(ls $TMFIER_LYT | fzf | awk -F' ' '{print $1}') }

# Save path for go packages
export GOPATH=$HOME/.local/share/go


# --# better defaults #-----------------------------------------------------------------

# keyboard behaviour 
bindkey "^[l" clear-screen
bindkey '^[[1;5D' backward-word
bindkey '^[[1;5C' forward-word
bindkey '^[[H' beginning-of-line
bindkey '^[[F' end-of-line
bindkey '^[[3~' delete-char
bindkey '^H' backward-kill-word
bindkey '^[[3;5~' kill-word

bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down

# tops
alias htop=btop
alias ntop='sudo bandwhich'

# sudo by default 
alias ss='sudo systemctl'
alias sv="sudo $EDITOR"

# human result
alias free='free -h'
alias df='df -h'
alias diff="diff --color='always'"

# convenience 
bindkey -s '^[c' ' | wl-copy^M'  # copy output to clipboard
bindkey -s '^[p' 'wl-paste > '   # paste clipboard content to a file
bindkey -s '^[r' ' | less^M'     # display output in less 
bindkey -s '^[n' ' | wc -l^M'    # count (Number of) results
bindkey -s '^[h' ' --help | less^M' # display help
bindkey -s '^[x' 'mr '           # help fix rm habit
alias x=exit
alias v=$EDITOR
alias vim=$EDITOR 
alias fonts='fc-list | cut -f2 -d: | sort -u'
alias diff="diff --color='always'"


# --# media control #-------------------------------------------------------------------

alias yt='yt-dlp'
alias ytvb='yt-dlp -q -f bestvideo -o "~/Videos/offlineYT/%(title)s.%(ext)s"'
alias ytab='yt-dlp -q -f bestaudio -o "~/Music/offlineYT/%(title)s.%(ext)s"'
alias ytvs="yt-dlp -q -f 'bv*/+size' -o '~/Videos/offlineYT/%(title)s.%(ext)s'"
alias ytas="yt-dlp -q -f 'ba*/+size' -o '~/Music/offlineYT/%(title)s.%(ext)s'"
alias snap='wl-paste > $HOME/Pictures/snaps/snap_$(date "+%Y-%m-%d-%H%M%S").png'


# --# hacks and patches #---------------------------------------------------------------

alias batcap='echo 80 | sudo tee /sys/class/power_supply/BAT1/charge_control_end_threshold'
alias tools="$HACK_SCRIPTS/tools.sh"
alias toolx="$EDITOR $HACK_SCRIPTS/tools.sh"
alias colors='sh $HACK_SCRIPTS/colors.sh'
alias periodic='sh $HACK_SCRIPTS/periodic.sh'
alias resistor=$HACK_SCRIPTS/resistor
alias toipe='./.local/share/cargo/bin/toipe'
alias fetch='sh ~/.config/fetch.sh'
alias rename='bash $HACK_SCRIPTS/rename.sh'


# --# xdg-ninja #-----------------------------------------------------------------------

alias xdgninja='sh ~/Desktop/ninja/xdg-ninja.sh --skip-unsupported'

# xdg paths
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_CACHE_HOME="$HOME/.cache"

# default directories
export JULIA_DEPOT_PATH="$XDG_DATA_HOME/julia:$JULIA_DEPOT_PATH"
export LESSHISTFILE="$XDG_STATE_HOME"/less/history
export _JAVA_OPTIONS="-Djava.util.prefs.userRoot=${XDG_CONFIG_HOME}/java -Djavafx.cachedir=${XDG_CACHE_HOME}/openjfx"
export RUSTUP_HOME="$XDG_DATA_HOME"/rustup
export XINITRC="$XDG_CONFIG_HOME"/X11/xinitrc
export CARGO_HOME="$XDG_DATA_HOME"/cargo
export CUDA_CACHE_PATH="$XDG_CACHE_HOME"/nv
export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc
export XAUTHORITY="$XDG_CONFIG_HOME"/Xauthority
export TMUXIFIER_LAYOUT_PATH="$XDG_CONFIG_HOME/tmux/tmuxifier/layouts/"
export GOPATH="$XDG_DATA_HOME/go"
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
export XCOMPOSECACHE="${XDG_CACHE_HOME}/X11/xcompose"


# --------------------------------------------------------------------------------------
# --# STARSHIP PROMPT #-----------------------------------------------------------------

eval "$(starship init zsh)"

