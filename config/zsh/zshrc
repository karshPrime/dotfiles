# .zshrc

# --------------------------------------------------------------------------------------
# -- INIT CONFIG -----------------------------------------------------------------------

sh ~/.config/fetch.sh

# zsh history
HISTFILE=~/.config/zsh/histfile 
HISTSIZE=1000 
SAVEHIST=1000
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS

# cd into directories without cd
setopt autocd extendedglob

# explicit declaration
export EDITOR=nvim

autoload -Uz compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
compinit -d "$XDG_CACHE_HOME"/zsh/zcompdump-"$ZSH_VERSION"

# Plugins
source ~/.config/zsh/zsh-autosuggestions/zsh-autosuggestions.zsh 
source ~/.config/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh 
source ~/.config/zsh/zsh-history/zsh-history.zsh 

fpath=(~/.config/zsh/zsh-completions/src $fpath) 


# --------------------------------------------------------------------------------------
# -- EASE OF LIFE ----------------------------------------------------------------------

# -- dotfiles --------------------------------------------------------------------------

# neofetch
alias nedit="$EDITOR $HOME/.config/nvim/init.lua"

# tmux
alias tedit="$EDITOR $HOME/.config/tmux/tmux.conf"

# zsh
alias zedit="$EDITOR $HOME/.zshrc"
alias zupdate="source $HOME/.zshrc"

# nixos
alias xedit="sudo $EDITOR /etc/nixos/configuration.nix"
alias xlist="sudo nix-env --list-generations --profile /nix/var/nix/profiles/system"
alias xrm="sudo nix-env --profile /nix/var/nix/profiles/system --delete-generations"
alias xrmall="sudo nix-collect-garbage --delete-old"
alias xupdate="sudo nixos-rebuild switch" # --upgrade to upgrade all packages


# -- package management ----------------------------------------------------------------

# nix packages
alias xpkgs="nix-store -q --references /var/run/current-system/sw | cut -d'-' -f2- | less"
alias xfind="nix-store -q --references /var/run/current-system/sw | cut -d'-' -f2- | grep -i"

# flatpak 
alias fpa='flatpak install'
alias fpr='flatpak uninstall --delete-data'
alias fpR='flatpak uninstall --all'
alias fps='flatpak search'
alias fpl='flatpak list'
alias fpi='flatpak info'
alias fpx='flatpak remote-add --if-not-exists'


# -- file navigation -------------------------------------------------------------------

# common dirs 
HACK_SCRIPTS="$HOME/Projects/SysHacks"

# look around
alias l='eza -la --color=always --group-directories-first'
alias ls='eza'
alias lh='eza -a | egrep "^\."'
alias la='eza -a --color=always --group-directories-first'
alias tree='eza -T --group-directories-first --icons=always'
alias wk='cd $(walk --icons)'

# process files
alias c='bat -n'
alias cat='bat -pp'
alias rm='sh $HACK_SCRIPTS/trash.sh'
alias rmc='rm $HOME/.local/share/Trash/files/*'
alias srm='sudo sh $HACK_SCRIPTS/trash.sh'

# easier navigate
alias tordown="cd ~/.local/share/torbrowser/tbb/x86_64/tor-browser/Browser/Downloads"
cdir() { mkdir $1 && cd $1 }
desk() { cd ~/Desktop/$1/$2 }
down() { cd ~/Downloads/$1/$2 }
docs() { cd ~/Documents/$1/$2 }
proj() { cd ~/Projects/$1/$2 }
conf() { cd ~/.config/$1/$2 }
count() { ls $1 | wc -l }


# -- notes -----------------------------------------------------------------------------

alias nl="eza ~/Documents/notes/"
alias td="$EDITOR ~/Documents/notes/todo"

nr() { bat -n ~/Documents/notes/$1 }
nw() { $EDITOR ~/Documents/notes/$1 }
nd() { rm ~/Documents/notes/$1 }


# -- development -----------------------------------------------------------------------

# shell
alias dev='nix-shell --run zsh'
alias devinit='. $HACK_SCRIPTS/project_initialise.sh'

# ssh
bindkey -s '^[s' 'ssh core3b+ "sudo date -s" "\\"$(date)\\""; clear; ssh core3b+^M'

# simple edit 
alias readme="$EDITOR README.md"
alias gignore="$EDITOR .gitignore"
alias gconfig="$EDITOR .git/config"
alias makefile="$EDITOR Makefile"
alias todo='$HOME/Projects/SysHacks/todo.sh'
srcmain() { $EDITOR ./src/main.$1 }

# assemby
alias assem="objdump -M intel -D"

# docker 
alias dcompu='sudo docker-compose up -d'
alias dcompd='sudo docker-compose down'
alias dockerd='sudo dockerd'

# git shortcuts
alias gita='git add'
alias gitA='git add -A'
alias gitc='git commit'
alias gitC='git commit -m'
alias gitD='git diff --stat'
alias gitd='git diff'
alias gitl='git log'
alias gitg='git clone'
alias gits='git status'
alias gitS='git switch'
alias gitp='git push'
alias gitP='git pull'
alias gith='git checkout'
alias gitb='git branch -a'
alias gitu="git reset --soft 'HEAD^'"
alias gito='git remote add origin'
alias gitr="git restore"
alias giti='onefetch --no-title --no-color-palette --ascii-input "$(cat ~/.config/onefetch.art)"'
gitR() { git rebase -i HEAD~$1 }
gitt() { touch $1; git add $1; git commit -m "create $1" }

# go development 
alias gorun="go run main.go"
alias gobuild="go build main.go"
alias gotidy="go mod tidy"

# new go project
gonew() { 
    mkdir $1 && cd $1 && git init && go mod init $1;
    cp ~/Projects/LICENSE . && git add LICENSE && git commit -m "Apache v2.0"
}

# new rust project
rsnew() {
    cargo new $1 && cd $1;
    cp ~/Projects/LICENSE . && git add LICENSE && git commit -m "Apache v2.0"
    git add -A; git commit -m "project init"
}

# tmux launch shortcuts
TMUXIFIER="$HOME/.config/tmux/tmuxifier/bin/tmuxifier"
alias tmn="$TMUXIFIER new-session"
alias tme="$TMUXIFIER edit-session"
alias tmk="tmux kill-session -t"
alias tmK="tmux kill-session"
alias tml="tmux ls"
alias tmu='tmux source-file ~/.config/tmux/tmux.conf'

# remove tmux session
tmd() { 
    rm ~/.config/tmux/plugins/tmuxifier/layouts/$1.session.sh 
}

# start new tmux session in full-screen terminal
tm()  { 
    mate-terminal --full-screen -e "$TMUXIFIER load-session $1" && exit
}

# list all sessions
tmL() { 
    exa ~/.config/tmux/plugins/tmuxifier/layouts | awk -F\. '{ORS=" "; print $1}'; 
    echo ""
}

# search for cmds
cmd() { 
    man -k $1|sed "s/ - \(.*\)/ - \o033[35m\1\o033[0m/"; 
}

# EAT40005
eatlog() {
    FILENAME="txts/week-$1.txt"
    cd ~/Projects/eat40005-worklog
    touch $FILENAME 
    mousepad $FILENAME
    ./run.sh $FILENAME
    FILENAME="export/102874485_week-$1.pdf"
    evince $FILENAME
    cd -
}


# -- better defaults -------------------------------------------------------------------

# keyboard behaviour 
bindkey "^[l" clear-screen
bindkey '^[[1;5D' backward-word
bindkey '^[[1;5C' forward-word
bindkey '^[[H' beginning-of-line
bindkey '^[[F' end-of-line
bindkey '^[[3~' delete-char
bindkey '^H' backward-kill-word
bindkey '^[[3;5~' kill-word

bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down

# tops
alias htop=btop
alias ntop='sudo bandwhich'

# sudo by default 
alias ss='sudo systemctl'
alias sv="sudo $EDITOR"

# human result
alias free='free -h'
alias df='df -h'

# convenience 
bindkey -s '^[c' ' | wl-copy^M'  # copy output to clipboard
bindkey -s '^[r' ' | less^M'     # display output in less 
bindkey -s '^[n' ' | wc -l^M'    # count (Number of) results
alias v=$EDITOR
alias vim=$EDITOR 
alias battery='acpi -ib; echo "\nlast= 76%"'
alias fonts='fc-list | cut -f2 -d: | sort -u'
alias diff="diff --color='always'"


# -- media control ---------------------------------------------------------------------

alias yt='yt-dlp'
alias ytvb='yt-dlp -q -f bestvideo -o "~/Videos/offlineYT/%(title)s.%(ext)s"'
alias ytab='yt-dlp -q -f bestaudio -o "~/Music/offlineYT/%(title)s.%(ext)s"'
alias ytvs="yt-dlp -q -f 'bv*/+size' -o '~/Videos/offlineYT/%(title)s.%(ext)s'"
alias ytas="yt-dlp -q -f 'ba*/+size' -o '~/Music/offlineYT/%(title)s.%(ext)s'"


# -- silly scripts ---------------------------------------------------------------------

alias batcap='echo 80 | sudo tee /sys/class/power_supply/BAT1/charge_control_end_threshold'
alias tools="$HACK_SCRIPTS/tools.sh"
alias toolx="$EDITOR $HACK_SCRIPTS/tools.sh"
alias colors='sh $HACK_SCRIPTS/colors.sh'
alias periodic='sh $HACK_SCRIPTS/periodic.sh'
alias resistor=$HACK_SCRIPTS/resistor
alias toipe='./.local/share/cargo/bin/toipe'
alias fetch='sh ~/.config/fetch.sh'
alias cpbig='$HACK_SCRIPTS/cpbig.sh'


# -- xdg-ninja -------------------------------------------------------------------------

alias xdgninja='sh ~/Desktop/ninja/xdg-ninja.sh --skip-unsupported'

# xdg paths
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_CACHE_HOME="$HOME/.cache"

# default directories
export JULIA_DEPOT_PATH="$XDG_DATA_HOME/julia:$JULIA_DEPOT_PATH"
export LESSHISTFILE="$XDG_STATE_HOME"/less/history
export JAVA_OPTIONS="-Djava.util.prefs.userRoot=${XDG_CONFIG_HOME}/java -Djavafx.cachedir=${XDG_CACHE_HOME}/openjfx"
export RUSTUP_HOME="$XDG_DATA_HOME"/rustup
export XINITRC="$XDG_CONFIG_HOME"/X11/xinitrc
export CARGO_HOME="$XDG_DATA_HOME"/cargo
export CUDA_CACHE_PATH="$XDG_CACHE_HOME"/nv
export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc
export XAUTHORITY="$XDG_CONFIG_HOME"/Xauthority
export TMUXIFIER_LAYOUT_PATH="$XDG_CONFIG_HOME/tmux/tmuxifier/layouts/"
export GOPATH="$XDG_DATA_HOME/go"
export RUSTUP_HOME="$XDG_DATA_HOME"/rustup


# --------------------------------------------------------------------------------------
# -- STARSHIP PROMPT -------------------------------------------------------------------
eval "$(starship init zsh)"

